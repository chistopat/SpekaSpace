// Package generated provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.7.1 DO NOT EDIT.
package generated

import (
	"time"
)

// Defines values for ErrorType.
const (
	ErrorTypeCONFLICT ErrorType = "CONFLICT"

	ErrorTypeINVALIDREQUEST ErrorType = "INVALID_REQUEST"

	ErrorTypeNOTFOUND ErrorType = "NOT_FOUND"
)

// Defines values for StatusField.
const (
	StatusFieldCANCELED StatusField = "CANCELED"

	StatusFieldDONE StatusField = "DONE"

	StatusFieldNEW StatusField = "NEW"

	StatusFieldPENDING StatusField = "PENDING"
)

// Error defines model for Error.
type Error struct {
	Message *string    `json:"message,omitempty"`
	Type    *ErrorType `json:"type,omitempty"`
}

// ErrorType defines model for Error.Type.
type ErrorType string

// full body
type Feedback struct {

	// о ком написан отзыв, логин
	AboutRecipient string `json:"about_recipient"`

	// plain text feedback body json
	Body      *string   `json:"body,omitempty"`
	CreatedAt time.Time `json:"created_at"`

	// автор отзыва, логин
	FromAuthor string `json:"from_author"`

	// увидит ли получатель автора
	IsAnonimous bool `json:"is_anonimous"`

	// кто запроил отзыв, логин
	Requester string `json:"requester"`

	// статус фидбека используется для настройки воркфлоу и жизненного цикла отзыва
	Status    StatusField `json:"status"`
	UpdatedAt time.Time   `json:"updated_at"`
	Uuid      string      `json:"uuid"`
}

// FeedbackCreateAskBody defines model for FeedbackCreateAskBody.
type FeedbackCreateAskBody struct {

	// на кого запрашиваем
	AboutRecipient string   `json:"about_recipient"`
	FromAuthors    []string `json:"from_authors"`

	// от кого (self)
	Requester string `json:"requester"`
}

// FeedbackCreateFullBody defines model for FeedbackCreateFullBody.
type FeedbackCreateFullBody struct {

	// на кого запрашиваем
	AboutRecipient string `json:"about_recipient"`

	// plain text feedback body json
	Body string `json:"body"`

	// от кого (self)
	FromAuthor string `json:"from_author"`
}

// Feedbacks defines model for Feedbacks.
type Feedbacks []Feedback

// статус фидбека используется для настройки воркфлоу и жизненного цикла отзыва
type StatusField string

// ErrorResponse defines model for ErrorResponse.
type ErrorResponse Error

// CreateFeedbackJSONBody defines parameters for CreateFeedback.
type CreateFeedbackJSONBody FeedbackCreateFullBody

// CreateFeedbackAskJSONBody defines parameters for CreateFeedbackAsk.
type CreateFeedbackAskJSONBody FeedbackCreateAskBody

// ReadFeedbacksParams defines parameters for ReadFeedbacks.
type ReadFeedbacksParams struct {

	// по какому статус селектить
	Status *StatusField `json:"status,omitempty"`

	// логин автора отзыва
	FromAuthor *string `json:"from_author,omitempty"`
}

// CreateFeedbackJSONRequestBody defines body for CreateFeedback for application/json ContentType.
type CreateFeedbackJSONRequestBody CreateFeedbackJSONBody

// CreateFeedbackAskJSONRequestBody defines body for CreateFeedbackAsk for application/json ContentType.
type CreateFeedbackAskJSONRequestBody CreateFeedbackAskJSONBody
