openapi: 3.0.3
info:
  title: feedya
  description: Feedback Service Implementation
  version: 1.0.0
  contact:
    name: Yegor Chisyakov
    email: chistopat@gmail.com
servers:
  - url: http://localhost:8042
    description: local
  - url: http://test.feemple
    description: test
  - url: http://prod.feemple
tags:
  - name: Feedback
    description: all about feedback
paths:
  /api/v1/feedback:
    post:
      tags:
        - Feedback
      summary: Оставить отзыв
      operationId: CreateFeedback
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedbackCreateFullBody'
      responses:
        '201':
          description: Resource created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feedback'
        '400':
          $ref: '#/components/responses/ErrorResponse'
  /api/v1/feedback/ask:
    post:
      tags:
        - Feedback
      summary: сделать запрос на отзыв
      operationId: CreateFeedbackAsk
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedbackCreateAskBody'
      responses:
        '201':
          description: Resource created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feedbacks'
        '400':
          $ref: '#/components/responses/ErrorResponse'
  /api/v1/feedback/{uuid}:
    get:
      tags:
        - Feedback
      summary: Посмотреть отзыв по id
      operationId: ReadFeedback
      parameters:
        - name: uuid
          in: path
          description: по какому айдишнику селектить
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feedback'
        '404':
          $ref: '#/components/responses/ErrorResponse'
  /api/v1/feedbacks:
    get:
      tags:
        - Feedback
      summary: Получить список отзывов
      operationId: ReadFeedbacks
      parameters:
        - name: status
          in: query
          description: по какому статус селектить
          required: false
          schema:
            $ref: '#/components/schemas/StatusField'
        - name: from_author
          in: query
          description: логин автора отзыва
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feedback'
        '404':
          $ref: '#/components/responses/ErrorResponse'
components:
  responses:
    ErrorResponse:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:
    Error:
      type: object
      properties:
        type:
          type: string
          enum:
            - INVALID_REQUEST
            - NOT_FOUND
            - CONFLICT
        message:
          type: string
          example: required fields not found
    FeedbackCreateFullBody:
      type: object
      required:
        - from_author
        - about_recipient
        - body
      properties:
        about_recipient:
          type: string
          description: на кого запрашиваем
          example: rick
        from_author:
          description: от кого (self)
          type: string
          example: rick
        body:
          type: string
          description: plain text feedback body json
          example: '{"question": "answer", "question2": "answer"}'
    FeedbackCreateAskBody:
      type: object
      required:
        - from_authors
        - about_recipient
        - requester
      properties:
        from_authors:
          type: array
          items:
            type: string
            description: логины людей у которых запрашиваем отзывы, не менее одного
            example:
              - jerry
              - morty
              - summer
        about_recipient:
          type: string
          description: на кого запрашиваем
          example: rick
        requester:
          description: от кого (self)
          type: string
          example: rick
    Feedbacks:
      type: array
      items:
        $ref: '#/components/schemas/Feedback'
    Feedback:
      description: full body
      type: object
      required:
        - uuid
        - created_at
        - updated_at
        - status
        - from_author
        - about_recipient
        - requester
        - is_anonimous
      properties:
        uuid:
          type: string
          example: 1e3a5b53-9cd2-4805-87b9-5f8568f73129
        created_at:
          type: string
          format: date-time
          example: '2021-10-11T20:10:01Z'
        updated_at:
          type: string
          format: date-time
          example: '2021-10-11T20:10:01Z'
        status:
          $ref: '#/components/schemas/StatusField'
        body:
          type: string
          description: plain text feedback body json
          example: '{"question": "answer", "question2": "answer"}'
        from_author:
          type: string
          description: автор отзыва, логин
          example: rick
        requester:
          type: string
          description: кто запроил отзыв, логин
          example: morty
        about_recipient:
          type: string
          description: о ком написан отзыв, логин
          example: jerry
        is_anonimous:
          type: boolean
          description: увидит ли получатель автора
          example: true
    StatusField:
      type: string
      enum:
        - NEW
        - PENDING
        - CANCELED
        - DONE
      description: >-
        статус фидбека используется для настройки воркфлоу и жизненного цикла
        отзыва
      default: NEW
      example: NEW
