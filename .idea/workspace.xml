<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="95a1f4e9-9386-446a-8107-7c391758f15d" name="Changes" comment="add makefile">
      <change afterPath="$PROJECT_DIR$/.idea/lim-ext2.iml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/simple_gateway/config.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/simple_gateway/handlers.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/simple_gateway/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Makefile" beforeDir="false" afterPath="$PROJECT_DIR$/Makefile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/ReadMe.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///usr/local/opt/go/libexec" />
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="yegor-chistyakov-hardway-lesson-1-hw" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitSEFilterConfiguration">
    <file-type-list>
      <filtered-out-file-type name="LOCAL_BRANCH" />
      <filtered-out-file-type name="REMOTE_BRANCH" />
      <filtered-out-file-type name="TAG" />
      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
    </file-type-list>
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="false" />
  </component>
  <component name="ProjectId" id="213bXTnJeuTkKms3qPXtr8YJoy6" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="DefaultGoTemplateProperty" value="Go File" />
    <property name="Git.Branch.Popup.ShowAllRemotes" value="true" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="go.formatter.settings.were.checked" value="true" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.modules.go.list.on.any.changes.was.set" value="true" />
    <property name="go.sdk.automatically.set" value="true" />
    <property name="last_opened_file_path" value="$USER_HOME$" />
    <property name="settings.editor.selected.configurable" value="go.sdk" />
  </component>
  <component name="RunManager" selected="Makefile Target.init">
    <configuration default="true" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="lim-ext2" />
      <working_directory value="$PROJECT_DIR$" />
      <go_parameters value="-i" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="Unnamed" type="GoRemoteDebugConfigurationType" factoryName="Go Remote" nameIsGenerated="true">
      <option name="disconnectOption" value="ASK" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="GoTestRunConfiguration" factoryName="Go Test">
      <module name="lim-ext2" />
      <working_directory value="$PROJECT_DIR$" />
      <go_parameters value="-i" />
      <kind value="DIRECTORY" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <configuration name="go test git.redmadrobot.com/internship/backend/lim-ext/pkg/auth/test" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="lim-ext2" />
      <working_directory value="$PROJECT_DIR$/pkg/auth/test" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="git.redmadrobot.com/internship/backend/lim-ext/pkg/auth/test" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <configuration name="go test git.redmadrobot.com/internship/backend/lim/tests" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="lim-ext2" />
      <working_directory value="$PROJECT_DIR$/tests" />
      <envs>
        <env name="PREFIX" value="LIM" />
        <env name="LIM_TEST" value="&quot;true&quot;" />
        <env name="LIM_AUTH_JWT_PUBLIC_KEY_PATH" value="./pkg/auth/test/cert/id_rsa.pub" />
        <env name="LIM_AUTH_JWT_PRIVATE_KEY_PATH" value="./pkg/auth/test/cert/id_rsa" />
        <env name="LIM_DB_NAME" value="" />
        <env name="LIM_DB_USER" value="" />
        <env name="LIM_DB_PASSWORD" value="" />
        <env name="LIM_TEST_DB_PORT" value="5432" />
        <env name="LIM_TEST_DB_NAME" value="livecomm" />
        <env name="LIM_TEST_DB_USER" value="postgres" />
        <env name="LIM_TEST_DB_PASSWORD" value="" />
      </envs>
      <EXTENSION ID="net.ashald.envfile">
        <option name="IS_ENABLED" value="false" />
        <option name="IS_SUBST" value="false" />
        <option name="IS_PATH_MACRO_SUPPORTED" value="false" />
        <option name="IS_IGNORE_MISSING_FILES" value="false" />
        <option name="IS_ENABLE_EXPERIMENTAL_INTEGRATIONS" value="false" />
        <ENTRIES>
          <ENTRY IS_ENABLED="true" PARSER="runconfig" />
        </ENTRIES>
      </EXTENSION>
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="git.redmadrobot.com/internship/backend/lim/tests" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <configuration name="clean" type="MAKEFILE_TARGET_RUN_CONFIGURATION" factoryName="Makefile" temporary="true">
      <makefile filename="$PROJECT_DIR$/Makefile" target="clean" workingDirectory="" arguments="">
        <envs />
      </makefile>
      <method v="2" />
    </configuration>
    <configuration name="gen" type="MAKEFILE_TARGET_RUN_CONFIGURATION" factoryName="Makefile" temporary="true">
      <makefile filename="$PROJECT_DIR$/Makefile" target="gen" workingDirectory="" arguments="">
        <envs />
      </makefile>
      <method v="2" />
    </configuration>
    <configuration name="init" type="MAKEFILE_TARGET_RUN_CONFIGURATION" factoryName="Makefile" temporary="true">
      <makefile filename="$PROJECT_DIR$/Makefile" target="init" workingDirectory="" arguments="">
        <envs />
      </makefile>
      <method v="2" />
    </configuration>
    <configuration name="Unnamed" type="docker-deploy" factoryName="docker-compose.yml" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="envFilePath" value="" />
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Docker.Unnamed" />
      <item itemvalue="Go Remote.Unnamed" />
      <item itemvalue="Go Test.go test git.redmadrobot.com/internship/backend/lim-ext/pkg/auth/test" />
      <item itemvalue="Go Test.go test git.redmadrobot.com/internship/backend/lim/tests" />
      <item itemvalue="Makefile Target.gen" />
      <item itemvalue="Makefile Target.clean" />
      <item itemvalue="Makefile Target.init" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Makefile Target.init" />
        <item itemvalue="Makefile Target.gen" />
        <item itemvalue="Makefile Target.clean" />
        <item itemvalue="Go Test.go test git.redmadrobot.com/internship/backend/lim/tests" />
        <item itemvalue="Go Test.go test git.redmadrobot.com/internship/backend/lim-ext/pkg/auth/test" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
    <option name="oldMeFiltersMigrated" value="true" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="удалил все лишнее" />
    <MESSAGE value="еще удалил" />
    <MESSAGE value="докер" />
    <MESSAGE value="init" />
    <MESSAGE value="add makefile" />
    <option name="LAST_COMMIT_MESSAGE" value="add makefile" />
  </component>
  <component name="VgoProject">
    <integration-enabled>true</integration-enabled>
  </component>
</project>